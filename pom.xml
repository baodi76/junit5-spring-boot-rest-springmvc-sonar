<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>io.github.bonigarcia</groupId>
    <artifactId>junit5-spring-boot-rest</artifactId>
    <version>1.0.0</version>

    <!-- Parent (Spring Boot) -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.M3</version>
    </parent>

    <properties>
        <!-- Dependency versions -->
        <junit.jupiter.version>5.0.3</junit.jupiter.version>
        <junit.platform.version>1.0.3</junit.platform.version>

        <!-- Java 8 -->
        <java.version>1.8</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
              			<groupId>org.junit.platform</groupId>
              			<artifactId>junit-platform-runner</artifactId>
              			<version>${junit.platform.version}</version>
              			<scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
						<!-- plugins for sonarqube -->
						<plugin>
						      <groupId>org.sonarsource.scanner.maven</groupId>
						      <artifactId>sonar-maven-plugin</artifactId>
						      <version>3.2</version>
						  </plugin>
						<!-- plugin for code coverage -->
						<plugin>
							    <groupId>org.jacoco</groupId>
							    <artifactId>jacoco-maven-plugin</artifactId>
							    <version>0.7.5.201505241946</version>
									<executions>
								         <!--
								             Prepares the property pointing to the JaCoCo runtime agent which
								             is passed as VM argument when Maven the Surefire plugin is executed.
								         -->
								         <execution>
								             <id>pre-unit-test</id>
								             <goals>
								                 <goal>prepare-agent</goal>
								             </goals>
								             <configuration>
								                 <!-- Sets the path to the file which contains the execution data. -->
								                 <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
								                 <!--
								                     Sets the name of the property containing the settings
								                     for JaCoCo runtime agent.
								                 -->
								                 <propertyName>surefireArgLine</propertyName>
								             </configuration>
								         </execution>
								         <!--
								             Ensures that the code coverage report for unit tests is created after
								             unit tests have been run.
								         -->
								         <execution>
								             <id>post-unit-test</id>
								             <phase>test</phase>
								             <goals>
								                 <goal>report</goal>
								             </goals>
								             <configuration>
								                 <!-- Sets the path to the file which contains the execution data. -->
								                 <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
								                 <!-- Sets the output directory for the code coverage report. -->
								                 <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
								             </configuration>
								         </execution>
												 <!-- Integration Test -->
												 <execution>
												             <id>pre-integration-test</id>
												             <phase>pre-integration-test</phase>
												             <goals>
												                 <goal>prepare-agent</goal>
												             </goals>
												             <configuration>
												                 <!-- Sets the path to the file which contains the execution data. -->
												                 <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
												                 <!--
												                     Sets the name of the property containing the settings
												                     for JaCoCo runtime agent.
												                 -->
												                 <propertyName>failsafeArgLine</propertyName>
												             </configuration>
												         </execution>
												         <!--
												             Ensures that the code coverage report for integration tests after
												             integration tests have been run.
												         -->
												         <execution>
												             <id>post-integration-test</id>
												             <phase>post-integration-test</phase>
												             <goals>
												                 <goal>report</goal>
												             </goals>
												             <configuration>
												                 <!-- Sets the path to the file which contains the execution data. -->
												                 <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
												                 <!-- Sets the output directory for the code coverage report. -->
												                 <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
												             </configuration>
												         </execution>
								     </executions>
						</plugin>
						<!-- Maven surefire plugin -->
						<plugin>
						    <groupId>org.apache.maven.plugins</groupId>
						    <artifactId>maven-surefire-plugin</artifactId>
						    <!--version>2.15</version-->
						    <configuration>
						        <!-- Sets the VM argument line used when unit tests are run. -->
						        <argLine>${surefireArgLine}</argLine>
						        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
						        <skipTests>${skip.unit.tests}</skipTests>
						        <!-- Excludes integration tests when unit tests are run. -->
						        <excludes>
						            <exclude>**/IT*.java</exclude>
						        </excludes>
						    </configuration>
						</plugin>

						<!-- Failsafe plugin for IT test -->
						<plugin>
						    <groupId>org.apache.maven.plugins</groupId>
						    <artifactId>maven-failsafe-plugin</artifactId>
						    <!--version>2.15</version-->
						    <executions>
						        <!--
						            Ensures that both integration-test and verify goals of the Failsafe Maven
						            plugin are executed.
						        -->
						        <execution>
						            <id>integration-tests</id>
						            <goals>
						                <goal>integration-test</goal>
						                <goal>verify</goal>
						            </goals>
						            <configuration>
						                <!-- Sets the VM argument line used when integration tests are run. -->
						                <argLine>${failsafeArgLine}</argLine>
						                <!--
						                    Skips integration tests if the value of skip.integration.tests property
						                    is true
						                -->
						                <skipTests>${skip.integration.tests}</skipTests>
						            </configuration>
						        </execution>
						    </executions>
						</plugin>

        </plugins>

    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <url>https://repo.spring.io/libs-milestone</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>
<profiles>
	<profile>
		<id>sonar</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<properties>
			<sonar.jdbc.url>jdbc:h2:tcp://localhost:9092/sonar</sonar.jdbc.url>
			<sonar.jdbc.driver>org.hibernate.dialect.H2Dialect</sonar.jdbc.driver>
			<sonar.jdbc.username>sonar</sonar.jdbc.username>
			<sonar.jdbc.password>sonar</sonar.jdbc.password>
			<sonar.sources>src/main/java,src/main/resources</sonar.sources>
			<sonar.jacoco.reportPaths>target/jacoco.exec,target/coverage-reports/jacoco-ut.exec,target/jacoco-it.exec</sonar.jacoco.reportPaths>
			<!-- SERVER ON A REMOTE HOST -->
			<sonar.host.url>http://localhost:9000</sonar.host.url>
		</properties>
	</profile>
</profiles>
</project>
